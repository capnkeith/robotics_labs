Archive member included to satisfy reference by file (symbol)

/usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_exit.o)
                              /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o (exit)
/usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_copy_data.o)
                              led.o (__do_copy_data)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
LOAD led.o
LOAD /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a
LOAD /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/libm.a
LOAD /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/libc.a
LOAD /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/libatmega328p.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                0x0000000000000400                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000       0xc8
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
                0x0000000000000068                . = ALIGN (0x2)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000008a        0x8 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
 *(.init9)
 *(.text)
 .text          0x0000000000000092        0x4 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
                0x0000000000000092                __vector_20
                0x0000000000000092                __vector_1
                0x0000000000000092                __vector_24
                0x0000000000000092                __vector_12
                0x0000000000000092                __bad_interrupt
                0x0000000000000092                __vector_6
                0x0000000000000092                __vector_3
                0x0000000000000092                __vector_23
                0x0000000000000092                __vector_25
                0x0000000000000092                __vector_11
                0x0000000000000092                __vector_13
                0x0000000000000092                __vector_17
                0x0000000000000092                __vector_19
                0x0000000000000092                __vector_7
                0x0000000000000092                __vector_5
                0x0000000000000092                __vector_4
                0x0000000000000092                __vector_9
                0x0000000000000092                __vector_2
                0x0000000000000092                __vector_21
                0x0000000000000092                __vector_15
                0x0000000000000092                __vector_8
                0x0000000000000092                __vector_14
                0x0000000000000092                __vector_10
                0x0000000000000092                __vector_16
                0x0000000000000092                __vector_18
                0x0000000000000092                __vector_22
 .text          0x0000000000000096        0x0 led.o
 .text          0x0000000000000096        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000096        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_copy_data.o)
                0x0000000000000096                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000096       0x2e led.o
                0x0000000000000096                main
 .text.libgcc.mul
                0x00000000000000c4        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000000c4        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000000c4        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000000c4        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000000c4        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000000c4        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000000c4        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000000c4        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000000c4        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000000c4        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000000c4        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000000c4        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000000c4        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000000c4        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_copy_data.o)
                0x00000000000000c4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000000c4        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_exit.o)
                0x00000000000000c4                exit
                0x00000000000000c4                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000000c4        0x4 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x00000000000000c8                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x00000000000000c8                _etext = .

.data           0x0000000000800100        0x4 load address 0x00000000000000c8
                0x0000000000800100                PROVIDE (__data_start = .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
 .data          0x0000000000800100        0x4 led.o
                0x0000000000800100                steps
 .data          0x0000000000800104        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800104        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_copy_data.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x0000000000800104                . = ALIGN (0x2)
                0x0000000000800104                _edata = .
                0x0000000000800104                PROVIDE (__data_end = .)

.bss            0x0000000000800104        0x0
                [!provide]                        PROVIDE (__bss_start = .)
 *(.bss)
 .bss           0x0000000000800104        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
 .bss           0x0000000000800104        0x0 led.o
 .bss           0x0000000000800104        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800104        0x0 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_copy_data.o)
 *(.bss*)
 *(COMMON)
                [!provide]                        PROVIDE (__bss_end = .)
                0x00000000000000c8                __data_load_start = LOADADDR (.data)
                0x00000000000000cc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800104        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x0000000000800104                _end = .
                [!provide]                        PROVIDE (__heap_start = .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 led.o
                                         0x12 (size before relaxing)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x40
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_exit.o)
 .debug_aranges
                0x0000000000000020       0x20 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_copy_data.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x640
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x5f4 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
 .debug_info    0x00000000000005f4       0x26 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_exit.o)
 .debug_info    0x000000000000061a       0x26 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_copy_data.o)

.debug_abbrev   0x0000000000000000      0x5ca
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x5a2 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
 .debug_abbrev  0x00000000000005a2       0x14 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_exit.o)
 .debug_abbrev  0x00000000000005b6       0x14 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_copy_data.o)

.debug_line     0x0000000000000000      0x115
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
 .debug_line    0x000000000000001d       0x61 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_exit.o)
 .debug_line    0x000000000000007e       0x97 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_copy_data.o)

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x28a
 *(.debug_str)
 .debug_str     0x0000000000000000      0x208 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
 .debug_str     0x0000000000000208       0x82 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_exit.o)
 .debug_str     0x000000000000028a       0x82 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_copy_data.o)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)
OUTPUT(led.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__data_end                                        /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_copy_data.o)
__do_copy_data                                    /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_copy_data.o)
                                                  led.o
__heap_end                                        /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__init                                            /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__stack                                           /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_1                                        /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_10                                       /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_11                                       /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_12                                       /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_13                                       /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_14                                       /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_15                                       /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_16                                       /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_17                                       /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_18                                       /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_19                                       /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_2                                        /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_20                                       /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_21                                       /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_22                                       /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_23                                       /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_24                                       /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_25                                       /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_3                                        /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_4                                        /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_5                                        /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_6                                        /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_7                                        /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_8                                        /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_9                                        /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vector_default                                  /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
__vectors                                         /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
_exit                                             /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_exit.o)
exit                                              /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/avr5/libgcc.a(_exit.o)
                                                  /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
main                                              led.o
                                                  /usr/local/Cellar/avr-gcc/8.1.0/lib/avr-gcc/8/gcc/avr/8.1.0/../../../../../../avr/lib/avr5/crtatmega328p.o
steps                                             led.o
